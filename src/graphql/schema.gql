
input ChangePostStatusInput {
	uuid: ID!
	status: Status!
}

input ChangeRoleInput {
	uuid: String!
	role: Role!
}

"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime




input LoginInput {
	email: String!
	password: String!
}

type MutationRoot {
	firstUser(input: UserInput!): User!
	newUser(input: UserInput!): User!
	changeRole(input: ChangeRoleInput!): User!
	login(input: LoginInput!): Token!
	newPost(input: NewPostInput!): Post!
	updatePost(input: UpdatePostInput!): Post!
	changePostStatus(input: ChangePostStatusInput!): Post!
}

input NewPostInput {
	title: String!
	raw: String!
	html: String!
}

type Post {
	uuid: ID!
	status: Status!
	raw: String!
	html: String!
	createdAt: DateTime!
	updatedAt: DateTime!
	author: User!
}

type QueryRoot {
	user(uuid: String!): User
	post(uuid: String!): Post
	allPosts: [Post!]!
}

enum Role {
	ADMIN
	WRITER
	EDITOR
}

enum Status {
	PUBLISHED
	DISABLED
	DRAFT
}


type Token {
	token: String!
}

input UpdatePostInput {
	uuid: ID!
	title: String!
	raw: String!
	html: String!
}

type User {
	uuid: ID!
	email: String!
	role: Role!
	createdAt: String!
	updatedAt: String!
}

input UserInput {
	email: String!
	password: String!
	passwordConfirmation: String!
}

schema {
	query: QueryRoot
	mutation: MutationRoot
}
